{{ ansible_managed | comment }}
# This is a basic configuration for signing and verifying. It can easily be
# adapted to suit a basic installation. See opendkim.conf(5) and
# /usr/share/doc/opendkim/examples/opendkim.conf.sample for complete
# documentation of available configuration parameters.

# Common signing and verification parameters. In Debian, the "From" header is
# oversigned, because it is often the identity key used by reputation systems
# and thus somewhat security sensitive.
Canonicalization	relaxed/simple
Mode sv
OversignHeaders From

Canonicalization  relaxed/simple

Syslog            yes
SyslogSuccess     yes
SendReports       yes
SoftwareHeader    yes
LogWhy            yes

# Signing domain, selector, and key (required). For example, perform signing
# for domain "example.com" with selector "2020" (2020._domainkey.example.com),
# using the private key stored in /etc/dkimkeys/example.private. More granular
# setup options can be found in /usr/share/doc/opendkim/README.opendkim.
Domain {{ postfix_mydomain }}
#SubDomains no

# Gives the location of a file mapping key names to signing keys. In simple terms
# this tells Open DKIM where to find your keys. If present, overides any
# Keyfile directive in the config file. Requires SigningTable.
KeyTable file:{{ postfix_dkim_keytable }}

# Defines a table used to select on or more signatures to apply to a message based
# on the address found in the From: header field. In simple term, this tells
# OpenDKIM how to use your keys. Requires KeyTable to be enabled.
SigningTable refile:{{ postfix_dkim_signingtable }}

# In Debian, opendkim runs as user "opendkim". A umask of 007 is required when
# using a local socket with MTAs that access the socket as a non-privileged
# user (for example, Postfix). You may need to add user "postfix" to group
# "opendkim" in that case.
UserID opendkim
UMask 007

# Socket for the MTA connection (required). If the MTA is inside a chroot jail,
# it must be ensured that the socket is accessible. In Debian, Postfix runs in
# a chroot in /var/spool/postfix, therefore a Unix socket would have to be
# configured as shown on the last line below.
#Socket local:/run/opendkim/opendkim.sock
#Socket inet:8891
#Socket local:/var/spool/postfix/opendkim/opendkim.sock
Socket  inet:8891@localhost

PidFile /run/opendkim/opendkim.pid

Statistics /var/spool/opendkim/stats.dat
ReportAddress "{{ postfix_mydomain }} Postmaster" <postmaster@{{ postfix_mydomain }}>

# Hosts for which to sign rather than verify, default is 127.0.0.1. See the
# OPERATION section of opendkim(8) for more information.
# InternalHosts 192.168.0.0/16, 10.0.0.0/8, 172.16.0.0/12
InternalHosts 127.0.0.1
# InternalHosts {{ postfix_dkim_trustedhosts }}

# The trust anchor enables DNSSEC. In Debian, the trust anchor file is provided
# by the package dns-root-data.
TrustAnchorFile		/usr/share/dns/root.key
Nameservers		127.0.0.1

